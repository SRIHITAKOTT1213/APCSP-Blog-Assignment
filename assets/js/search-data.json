{
  
    
        "post0": {
            "title": "Python_lists",
            "content": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: 10, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “name Sri Kotturi &lt;class ‘str’&gt; n”, “age 16 &lt;class ‘int’&gt; n”, “score 90.0 &lt;class ‘float’&gt; n”, “ n”, “langs [‘Python’, ‘JavaScript’, ‘Java’, ‘Bash’, ‘html’] &lt;class ‘list’&gt; n”, “- langs[2] Java &lt;class ‘str’&gt; n”, “ n”, “person {‘name’: ‘Sri Kotturi’, ‘age’: 16, ‘score’: 90.0, ‘langs’: [‘Python’, ‘JavaScript’, ‘Java’, ‘Bash’, ‘html’]} &lt;class ‘dict’&gt; n”, “- person[&quot;name&quot;] Sri Kotturi &lt;class ‘str’&gt; n” ] } ], “source”: [ “# Sample of Python Variables n”, “ n”, “# variable of type string n”, “name = &quot;Sri Kotturi&quot; n”, “print(&quot;name&quot;, name, type(name)) n”, “ n”, “# variable of type integer n”, “age = 16 n”, “print(&quot;age&quot;, age, type(age)) n”, “ n”, “# variable of type float n”, “score = 90.0 n”, “print(&quot;score&quot;, score, type(score)) n”, “ n”, “print() n”, “ n”, “# variable of type list (many values in one variable) n”, “langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;Bash&quot;, &quot;html&quot;] n”, “print(&quot;langs&quot;, langs, type(langs)) n”, “print(&quot;- langs[2]&quot;, langs[2], type(langs[2])) n”, “ n”, “print() n”, “ n”, “# variable of type dictionary (a group of keys and values) n”, “person = { n”, “ &quot;name&quot;: name, n”, “ &quot;age&quot;: age, n”, “ &quot;score&quot;: score, n”, “ &quot;langs&quot;: langs n”, “} n”, “print(&quot;person&quot;, person, type(person)) n”, “print(‘- person[&quot;name&quot;]’, person[&quot;name&quot;], type(person[&quot;name&quot;])) n” ] }, { “cell_type”: “code”, “execution_count”: 11, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “[{‘FirstName’: ‘Srihita’, ‘LastName’: ‘Kotturi’, ‘DOB’: ‘December 13’, ‘Residence’: ‘San Diego’, ‘Email’: ‘srihita.kotturi@gmail.com’, ‘Owns_Cars’: [‘Hundai Accent’]}] n” ] } ], “source”: [ “# Define an empty List called InfoDb n”, “InfoDb = [] n”, “ n”, “# Append to List a Dictionary of key/values related to a person and cars n”, “InfoDb.append({ n”, “ &quot;FirstName&quot;: &quot;Srihita&quot;, n”, “ &quot;LastName&quot;: &quot;Kotturi&quot;, n”, “ &quot;DOB&quot;: &quot;December 13&quot;, n”, “ &quot;Residence&quot;: &quot;San Diego&quot;, n”, “ &quot;Email&quot;: &quot;srihita.kotturi@gmail.com&quot;, n”, “ &quot;Owns_Cars&quot;: [&quot;Hundai Accent&quot;] n”, “ n”, “ n”, “}) n”, “ n”, “ n”, “print(InfoDb)” ] }, { “cell_type”: “code”, “execution_count”: 12, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “For loop output n”, “ n”, “Srihita Kotturi n”, “ t Residence: San Diego n”, “ t Birth Day: December 13 n”, “ t Cars: Hundai Accent n”, “ n” ] } ], “source”: [ “# given and index this will print InfoDb content n”, “def print_data(d_rec): n”, “ print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values n”, “ print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent n”, “ print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) n”, “ print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs n”, “ print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator n”, “ print() n”, “ n”, “ n”, “# for loop iterates on length of InfoDb n”, “def for_loop(): n”, “ print(&quot;For loop output n&quot;) n”, “ for record in InfoDb: n”, “ print_data(record) n”, “ n”, “for_loop()” ] }, { “cell_type”: “code”, “execution_count”: 13, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “While loop output n”, “ n”, “Srihita Kotturi n”, “ t Residence: San Diego n”, “ t Birth Day: December 13 n”, “ t Cars: Hundai Accent n”, “ n” ] } ], “source”: [ “# while loop contains an initial n and an index incrementing statement (n += 1) n”, “def while_loop(): n”, “ print(&quot;While loop output n&quot;) n”, “ i = 0 n”, “ while i &lt; len(InfoDb): n”, “ record = InfoDb[i] n”, “ print_data(record) n”, “ i += 1 n”, “ return n”, “ n”, “while_loop()” ] }, { “cell_type”: “code”, “execution_count”: 9, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Recursive loop output n”, “ n”, “Srihita Kotturi n”, “ t Residence: San Diego n”, “ t Birth Day: December 13 n”, “ t Cars: Hundai Accent n”, “ n” ] } ], “source”: [ “# recursion simulates loop incrementing on each call (n + 1) until exit condition is met n”, “def recursive_loop(i): n”, “ if i &lt; len(InfoDb): n”, “ record = InfoDb[i] n”, “ print_data(record) n”, “ recursive_loop(i + 1) n”, “ return n”, “ n”, “print(&quot;Recursive loop output n&quot;) n”, “recursive_loop(0)” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.8.10 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.8.10” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “916dbcbb3f70747c44a77c7bcd40155683ae19c65e1c03b4aa3499c5328201f1” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://srihitakott1213.github.io/APCSP-Blog-Assignment/2022/09/03/Python_Lists.ipynb",
            "relUrl": "/2022/09/03/Python_Lists.ipynb",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Bash Project",
            "content": "{ “cells”: [ { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “ echo &quot;Using conditional statement to create a project directory and project&quot; n”, “ n”, “# Variable section n”, “export project_dir=$HOME/vscode-SRIHITAKOTT1213 # change vscode to different name to test git clone n”, “export project=$project_dir/APCSP-Blog-Assignment # change APCSP to name of project from git clone n”, “export project_repo=&quot;https://github.com/SRIHITAKOTT1213/APCSP-Blog-Assignment.git&quot; # change to project of choice n”, “ n”, “cd ~ # start in home directory n”, “ n”, “# Conditional block to make a project directory n”, “if [ ! -d $project_dir ] n”, “then n”, “ echo &quot;Directory $project_dir does not exists… makinng directory $project_dir&quot; n”, “ mkdir -p $project_dir n”, “fi n”, “echo &quot;Directory $project_dir exists.&quot; n”, “ n”, “# Conditional block to git clone a project from project_repo n”, “if [ ! -d $project ] n”, “then n”, “ echo &quot;Directory $project does not exists… cloning $project_repo&quot; n”, “ cd $project_dir n”, “ git clone $project_repo n”, “ cd ~ n”, “fi n”, “echo &quot;Directory $project exists.&quot; “ ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# You must run cells above to define variable and project n”, “ n”, “echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; n”, “cd $project n”, “pwd n”, “ n”, “echo &quot;&quot; n”, “echo &quot;list top level or root of files with project pulled from github&quot; n”, “ls n”, “ n”, “echo &quot;&quot; n”, “echo &quot;list again with hidden files pulled from github&quot; n”, “ls -a # hidden files flag, many shell commands have flags n”, “ n”, “echo &quot;&quot; n”, “echo &quot;list all files in long format&quot; n”, “ls -al # all files and long listing” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# You must run cells above to define variable and project n”, “ n”, “echo &quot;Look for posts&quot; n”, “export posts=$project/_posts # _posts inside project n”, “cd $posts # this should exist per fastpages n”, “pwd # present working directory n”, “ls -l # list posts” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# You must run cells above to define variable and project n”, “ n”, “echo &quot;Look for notebooks&quot; n”, “export notebooks=$project/_notebooks # _notebooks is inside project n”, “cd $notebooks # this should exist per fastpages n”, “pwd # present working directory n”, “ls -l # list notebooks” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# You must run cells above to define notebooks location n”, “ n”, “echo &quot;Look for images in notebooks, print working directory, list files&quot; n”, “cd $notebooks/images # this should exist per fastpages n”, “pwd n”, “ls -l” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# You must run cells above to define project n”, “echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; n”, “ n”, “cd $project n”, “echo &quot;show the contents of README.md&quot; n”, “echo &quot;&quot; n”, “ n”, “cat README.md # show contents of file, in this case markdown n”, “echo &quot;&quot; n”, “echo &quot;end of README.md&quot;” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# This command has no dependencies n”, “ n”, “echo &quot;Show the shell environment variables, key on left of equal value on right&quot; n”, “echo &quot;&quot; n”, “ n”, “env” ] }, { “cell_type”: “code”, “execution_count”: null, “metadata”: { “vscode”: { “languageId”: “shellscript” } }, “outputs”: [], “source”: [ “# This command has dependencies on project n”, “ n”, “cd $project n”, “ n”, “echo &quot;&quot; n”, “echo &quot;show the secrets of .git&quot; n”, “cd .git n”, “ls -l n”, “ n”, “echo &quot;&quot; n”, “echo &quot;look at config file&quot; n”, “cat config” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.9.12 (‘base’)”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.9.12” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “c592ff5847e581e8b66b02dcd331c526c35045e822da212864271a73a90b0063” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://srihitakott1213.github.io/APCSP-Blog-Assignment/2022/09/03/Bash-project.ipynb",
            "relUrl": "/2022/09/03/Bash-project.ipynb",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Apcsp Panel",
            "content": "Notes: How did you realize you wanted to do computers? . A few of the people said that they took it because they liked problem solving, others said thhey liked it because they were good at it, and one more said she didn’t like it but it was useful for many things and doing a few internships solidified her choice. | . What is the biggest challenge you’ve encountered in computers? . Starting sucks | There is a solution to everything and you just have to have enough patience | It is hard finding motivation to continue | Fighting the temptation to copy work just to get over it | always getting a syntax error is super frustrating and hard | . Are there any PBL scenarios in college computer science classes? . There are a few projects, one that you do in Freshman year and another you do in Senior year. | Both in class and out of class, a lot of people study in groups and work with other people to learn better because the Professor has too many students and won’t always be able to answer your questions. | Finding a good group is important because you rely on them to learn | . Have you applied CS in your major? . Coding will be everywhere and it can be used for pretty much anything | It can be used for all of your assignments and is really useful | What we are now learning is applicable to pretty much everything | . For existing college students, have you had a job for school or with a professor? . They recommend resumes | Doing internships and jobs | Some professors have clubs and others have research labs, and you can ask if there is a spot available and join | There are path finding algorithms everywhere | . KEY TAKEAWAYS: Computer Science can be used for anything and coding is used for everything so it is an important skill to learn. There are also many jobs that use the things/tools that we are learning in class so the more we learn, the more we can put it to use. And yes, computers can be frustrating, but they are worth the hardwork and patience and when you get through it, the output is most of the time rewarding. So this class is important and it is important to always try our best and learn as much as possible. .",
            "url": "https://srihitakott1213.github.io/APCSP-Blog-Assignment/2022/08/29/APCSP-Panel.html",
            "relUrl": "/2022/08/29/APCSP-Panel.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Biology Quiz",
            "content": "{ “cells”: [ { “cell_type”: “markdown”, “metadata”: {}, “source”: [ “# First Jupyter Notebook n”, “ n”, “&gt; Let’s see how well you do! n”, “ n”, “- title: Biology Quiz n”, “- toc: true n”, “- comments: true n”, “- title: Biology Quiz n”, “- image: /images/2022-08-28.png n” ] }, { “cell_type”: “code”, “execution_count”: 1, “metadata”: {}, “outputs”: [ { “name”: “stdout”, “output_type”: “stream”, “text”: [ “Hello,srihitak n”, “You will be asked 10 questions. n”, “Question: Are you ready to take the Quiz? n”, “yes is correct! n”, “Question: What are nitrogenous bases in DNA? n”, “thymine is incorrect n”, “The correct answer is Adenine, Guanine, Cytosine, Thymine n”, “Question: What does DNA stand for? n”, “Deoyribonucleic Acid is incorrect n”, “The correct answer is Deoxyribonucleic Acid n”, “Question: Who was the person who came up with the theory of Evolution? n”, “Charles Darwin is correct! n”, “Question: In what cell does photosynthesis take place? n”, “Chloroplast is correct! n”, “Question: What is the name of the relationship in which both sides benefit? n”, “Mutualism is correct! n”, “Question: Glycogen is a polymer of what? n”, “Glycogen is incorrect n”, “The correct answer is Glucose n”, “Question: How many chromosomes do humans have? n”, “46 is correct! n”, “Question: What are the weak bonds between water molecules called? n”, “Hydrogen bonds is correct! n”, “Question: What is the division of body cells called? n”, “Mitosis is correct! n”, “Question: What is the division of gametes called? n”, “Meiosis is correct! n”, “srihitak you scored 8/10 n” ] } ], “source”: [ “ n”, “def question_and_answer(prompt): n”, “ n”, “ print(&quot;Question: &quot; + prompt) n”, “ msg = input() n”, “ print(&quot;Answer: &quot; + msg) n”, “ n”, “ n”, “import getpass, sys n”, “ n”, “def question_with_response(prompt): n”, “ print(&quot;Question: &quot; + prompt) n”, “ msg = input() n”, “ return msg n”, “ n”, “questions = 10 n”, “correct = 0 n”, “ n”, “print(‘Hello,’ + getpass.getuser()) n”, “print(&quot;You will be asked &quot; + str(questions) +&quot; questions. &quot;) n”, “ n”, “ n”, “questions = [&quot;Are you ready to take the Quiz?&quot;, &quot;What are nitrogenous bases in DNA?&quot;, &quot;What does DNA stand for?&quot;, &quot;Who was the person who came up with the theory of Evolution?&quot;,&quot;In what cell does photosynthesis take place?&quot;, &quot;What is the name of the relationship in which both sides benefit?&quot;, &quot;Glycogen is a polymer of what?&quot;, &quot;How many chromosomes do humans have?&quot;, &quot;What are the weak bonds between water molecules called?&quot;, &quot;What is the division of body cells called?&quot;, &quot;What is the division of gametes called?&quot;] n”, “answers = [&quot;yes&quot;, &quot;Adenine, Guanine, Cytosine, Thymine&quot;, &quot;Deoxyribonucleic Acid&quot;, &quot;Charles Darwin&quot;,&quot;Chloroplast&quot;, &quot;Mutualism&quot;, &quot;Glucose&quot;, &quot;46&quot;, &quot;Hydrogen bonds&quot;, &quot;Mitosis&quot;, &quot;Meiosis&quot;] n”, “ n”, “for i in range(len(questions)): n”, “ rsp = question_with_response(questions[i]) n”, “ if rsp == answers[i]: n”, “ print(rsp + &quot; is correct!&quot;) n”, “ n”, “ correct += 1 n”, “ n”, “ else: n”, “ print(rsp + &quot; is incorrect&quot;) n”, “ print(&quot;The correct answer is &quot; + answers[i]) n”, “ n”, “print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/10&quot;)” ] } ], “metadata”: { “kernelspec”: { “display_name”: “Python 3.8.10 64-bit”, “language”: “python”, “name”: “python3” }, “language_info”: { “codemirror_mode”: { “name”: “ipython”, “version”: 3 }, “file_extension”: “.py”, “mimetype”: “text/x-python”, “name”: “python”, “nbconvert_exporter”: “python”, “pygments_lexer”: “ipython3”, “version”: “3.8.10” }, “orig_nbformat”: 4, “vscode”: { “interpreter”: { “hash”: “916dbcbb3f70747c44a77c7bcd40155683ae19c65e1c03b4aa3499c5328201f1” } } }, “nbformat”: 4, “nbformat_minor”: 2 } .",
            "url": "https://srihitakott1213.github.io/APCSP-Blog-Assignment/2022/08/27/Biology-Quiz.ipynb",
            "relUrl": "/2022/08/27/Biology-Quiz.ipynb",
            "date": " • Aug 27, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by APCSP 1. . A blog for computer science principles. &#8617; . |",
          "url": "https://srihitakott1213.github.io/APCSP-Blog-Assignment/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://srihitakott1213.github.io/APCSP-Blog-Assignment/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}